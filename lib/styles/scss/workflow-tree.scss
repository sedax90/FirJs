.workspace-root {
  --workspaceBgColor: #eaeaea;
  --nodeSelectedStrokeColor: dodgerblue;
  --nodeHasErrorStrokeColor: #dc3545;
  --startStrokeColor: skyblue;
  --startBgColor: lightblue;
  --endStrokeColor: green;
  --endBgColor: rgba(0, 255, 0, 0.25);
  --terminatorEndStrokeColor: sandybrown;
  --terminatorEndBgColor: bisque;
  --labelContainerFill: rgba(255, 255, 255, 1);
  --labelContainerStroke: rgba(0, 0, 0, 0.15);
  --labelContainerFilter: drop-shadow(3px 3px 2px rgba(0, 0, 0, 0.1));
  --labelFontWeight: lighter;
  --joinLineStroke: black;
  --joinLineStrokeWidth: 1.25;

  height: 100%;
  width: 100%;
  background-color: var(--workspaceBgColor);
  align-items: center;
  justify-content: center;
  position: relative;
}

.workflow-root {
  position: absolute;
}

.workflow-root.moving {
  cursor: grabbing;
}

.bg {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 0;
}

.label {
  font-weight: var(--labelFontWeight);
  letter-spacing: 1px;
}

.label-container {
  fill: var(--labelContainerFill);
  filter: var(--labelContainerFilter);
  stroke: var(--labelContainerStroke);
}

.step:hover {
  cursor: pointer;
}

.has-error > .step > .label-container,
.has-error
  > .map-children-wrapper
  > .children-container
  > .children-container-bg {
  stroke: var(--nodeHasErrorStrokeColor);
  stroke-width: 2;
}

.map.selected {
  & > .map-children-wrapper > .children-container > .children-container-bg {
    stroke: var(--nodeSelectedStrokeColor);
    stroke-width: 2;
  }
}
.selected > .step > .label-container {
  stroke: var(--nodeSelectedStrokeColor);
  stroke-width: 2;
}

.placeholder-selector {
  fill: var(--nodeSelectedStrokeColor);
}

.start-bg {
  fill: var(--startBgColor);
  stroke: var(--startStrokeColor);
}

.end-bg {
  fill: var(--endBgColor);
  stroke: var(--endStrokeColor);
}

.choice > .choices-container > .choices-container-bg {
  fill: transparent;
  stroke: transparent;
}

.choice.selected > .choices-container > .choices-container-bg {
  stroke: var(--nodeSelectedStrokeColor);
  stroke-width: 2;
}

.choice.selected > .choices-container > .choices-container-bg {
  opacity: 1;
}

.join-line {
  fill: transparent;
  stroke-width: var(--joinLineStrokeWidth);
  stroke: var(--joinLineStroke);
}

.marker-path {
  fill: var(--joinLineStroke);
}

.text-html {
  line-height: 1;
  position: relative;
  top: 50%;
  transform: translateY(-50%);
}

.label-icon-bg {
  fill: rgba(0, 0, 0, 0.075);
}

.grid-pattern-circle {
  fill: rgba(0, 0, 0, 0.125);
}

.children-container-bg {
  stroke: rgba(0, 0, 0, 0.125);
  fill: rgba(255, 255, 255, 0.25);
}

.output {
  fill: black;
}

.circle-label-icon {
  fill: var(--labelContainerFill);
  stroke: var(--joinLineStroke);
}

.dragging {
  opacity: 0.25;
}

.context-menu {
  padding: 0;
  background-color: #fff;
  box-shadow: rgba(0, 28, 36, 0.3) 0px 1px 1px 0px,
    rgba(0, 28, 36, 0.15) 1px 1px 1px 0px,
    rgba(0, 28, 36, 0.15) -1px 1px 1px 0px;
  border: 1px solid rgba(0, 0, 0, 0.125);
  border-radius: 2px;
  min-width: 150px;
}

.context-menu > ul {
  padding: 0;
  margin: 0;
}

.context-menu > ul > li {
  display: block;
  padding: 0.5em 1.6em;
  line-height: 1;
  cursor: pointer;
  text-align: left;
}

.context-menu > ul > li:hover {
  background-color: rgba(0, 0, 0, 0.05);
}

.choice-label-background {
  fill: var(--joinLineStroke);
}

.choice-label-text {
  color: white;
  font-size: 0.5em;
}

// .placeholder-area {
//   visibility: visible !important;
// }

.placeholder-area {
  opacity: 0.25;
}

.placeholder-area.hover {
  opacity: 1;
}

.placeholder-area.not-allowed .placeholder-selector {
  opacity: 0;
}

.placeholder-label {
  fill: var(--joinLineStroke);
  color: "white";
  font-size: 0.75em;
}

.placeholder-area.not-allowed .placeholder-label {
  fill: var(--nodeHasErrorStrokeColor);
  color: white;
}

.terminator-end .end-bg {
  fill: var(--terminatorEndBgColor);
  stroke: var(--terminatorEndStrokeColor);
}

.terminator-end .label {
  font-size: 0.5em;
}

.choice-column-bg {
  stroke: red;
}
